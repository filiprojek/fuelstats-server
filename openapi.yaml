openapi: 3.0.3
info:
  title: Fuelstats API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  '/':
    get:
      summary: Root endpoint
      responses:
        '200':
          description: OK
  '/api/v1/auth/signup':
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  '/api/v1/auth/signin':
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
  '/api/v1/user/me':
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  '/api/v1/vehicles':
    get:
      summary: List vehicles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
    post:
      summary: Create vehicle
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVehicle'
      responses:
        '201':
          description: Created vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
  '/api/v1/vehicles/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get vehicle by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
    put:
      summary: Update vehicle
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVehicle'
      responses:
        '200':
          description: Updated vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
    delete:
      summary: Delete vehicle
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Deleted
  '/api/v1/refuels':
    get:
      summary: List refuel records
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of refuels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Refuel'
    post:
      summary: Create refuel record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRefuel'
      responses:
        '201':
          description: Created refuel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refuel'
  '/api/v1/refuels/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get refuel by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Refuel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refuel'
    put:
      summary: Update refuel
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRefuel'
      responses:
        '200':
          description: Updated refuel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refuel'
    delete:
      summary: Delete refuel
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Deleted
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
    NewUser:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        username:
          type: string
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AuthToken:
      type: object
      properties:
        token:
          type: string
    Vehicle:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        name:
          type: string
        registrationPlate:
          type: string
        fuelType:
          type: string
        note:
          type: string
        isDefault:
          type: boolean
        createdAt:
          type: string
          format: date-time
    NewVehicle:
      type: object
      required: [name, registrationPlate, fuelType]
      properties:
        name:
          type: string
        registrationPlate:
          type: string
        fuelType:
          type: string
        note:
          type: string
        isDefault:
          type: boolean
    Refuel:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        vehicleId:
          type: string
        fuelType:
          type: string
        note:
          type: string
        liters:
          type: number
        pricePerLiter:
          type: number
        totalPrice:
          type: number
        mileage:
          type: number
        createdAt:
          type: string
          format: date-time
    NewRefuel:
      type: object
      required: [vehicleId, fuelType, liters, pricePerLiter, totalPrice, mileage]
      properties:
        vehicleId:
          type: string
        fuelType:
          type: string
        note:
          type: string
        liters:
          type: number
        pricePerLiter:
          type: number
        totalPrice:
          type: number
        mileage:
          type: number
